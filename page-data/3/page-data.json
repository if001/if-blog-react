{"componentChunkName":"component---src-templates-post-list-js","path":"/3","webpackCompilationHash":"ef01b7c5942ea3b11a3f","result":{"data":{"site":{"siteMetadata":{"title":"アンドロイドは推理小説を書くか?","author":"いふ","labels":[{"tag":"react","tech":"React","name":"DiReact","size":17,"color":"royalblue"},{"tag":"gatsby","tech":"gatsby","name":"DiReact","size":17,"color":"indigo"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":17,"color":"green"},{"tag":"git","tech":"Git","name":"DiGit","size":17,"color":"black"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":17,"color":"black"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":17,"color":"teal"},{"tag":"python","tech":"python","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"keras","tech":"keras","name":"DiPython","size":17,"color":"red"},{"tag":"seq2seq","tech":"seq2seq","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"word2vec","tech":"word2vec","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"seqgan","tech":"seqgan","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":17,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":17,"color":"red"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":17,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":17,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":17,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":17,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":17,"color":"deepskyblue"},{"tag":"go","tech":"go","name":"DiGo","size":17,"color":"black"},{"tag":"golang","tech":"Golang","name":"DiGo","size":17,"color":"black"},{"tag":"読書","tech":"読書","name":"FaBookOpen","size":17,"color":"blue"},{"tag":"読了","tech":"読了","name":"FaBook","size":17,"color":"green"},{"tag":"hugo","tech":"Hugo","name":"FaServer","size":17,"color":"deeppink"},{"tag":"falcon","tech":"falcon","name":"FaServer","size":17,"color":"dodgerblue"},{"tag":"docker","tech":"Docker","name":"DiDocker","size":17,"color":"blue"},{"tag":"aws","tech":"Aws","name":"DiAws","size":17,"color":"orange"},{"tag":"nlp","tech":"NLP","name":"FaLanguage","size":17,"color":"black"},{"tag":"firebase","tech":"FireBase","name":"DiGoogleCloudPlatform","size":17,"color":"blue"},{"tag":"deeplearning","tech":"DeepLearning","name":"FaBrain","size":17,"color":"blue"},{"tag":"poem","tech":"poem","name":"FaPenFancy","size":17,"color":"sandybrown"},{"tag":"rust","tech":"rust","name":"DiRust","size":17,"color":"black"},{"tag":"tex","tech":"tex","name":"FaTextHeight","size":17,"color":"teal"},{"tag":"論文","tech":"論文","name":"FaFileSignature","size":17,"color":"brown"},{"tag":"emacs","tech":"emasc","name":"FaEdit","size":17,"color":"purple"},{"tag":"google-analytics","tech":"google-analytics","name":"DiGoogleAnalytics","size":17,"color":"blue"}]}},"allMarkdownRemark":{"totalCount":33,"edges":[{"node":{"excerpt":"これまで長い間放置しててきたemacsの設定たちを見直すついでに、use-pacakgeを使ってみようと思う。 https://github.com/jwiegley/use-package   use-packageとは、emacsのパッケージ管理を強化するパッケージです。   use-package…","html":"<p>これまで長い間放置しててきたemacsの設定たちを見直すついでに、use-pacakgeを使ってみようと思う。<br>\n<a href=\"https://github.com/jwiegley/use-package\">https://github.com/jwiegley/use-package</a>  </p>\n<p>use-packageとは、emacsのパッケージ管理を強化するパッケージです。  </p>\n<p>use-packageのマクロを使用することで、  </p>\n<ul>\n<li>統一した記述による可読性が向上</li>\n<li>パッケージの遅延ロードの設定を簡潔にかけることによる起動の高速化</li>\n</ul>\n<p>などのメリットがあります。  </p>\n<h2 id=\"シンプルな例\"><a href=\"#%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AA%E4%BE%8B\" aria-label=\"シンプルな例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>シンプルな例</h2>\n<p>requireでのライブラリの読み込みは次のように書き換えることができます。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'foo</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> foo<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>use-packageではキーワードを使うことで、パッケージロード時の振る舞いを指定することができます。  </p>\n<h2 id=\"init\"><a href=\"#init\" aria-label=\"init permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:init</h2>\n<p>パッケージが読み込まれる前に実行される。</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> foo\n   <span class=\"token lisp-property property\">:init</span>\n   <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> foo-variable <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"config\"><a href=\"#config\" aria-label=\"config permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:config</h2>\n<p>パッケージがロードされた後に実行される。</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> foo\n  <span class=\"token lisp-property property\">:init</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> foo-variable <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:config</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">foo-mode</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"commands\"><a href=\"#commands\" aria-label=\"commands permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:commands</h2>\n<p><code class=\"language-text\">auto-load</code>するコマンドを指定する。</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> color-moccur\n  <span class=\"token lisp-property property\">:commands</span> <span class=\"token punctuation\">(</span><span class=\"token car\">isearch-moccur</span> isearch-all<span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:bind</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"M-s O\"</span> <span class=\"token punctuation\">.</span> moccur<span class=\"token punctuation\">)</span>\n         <span class=\"token lisp-property property\">:map</span> isearch-mode-map\n         <span class=\"token punctuation\">(</span><span class=\"token string\">\"M-o\"</span> <span class=\"token punctuation\">.</span> isearch-moccur<span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">(</span><span class=\"token string\">\"M-O\"</span> <span class=\"token punctuation\">.</span> isearch-moccur-all<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:init</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> isearch-lazy-highlight <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:config</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> moccur-edit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>この場合、<code class=\"language-text\">isearch-moccur</code>と<code class=\"language-text\">isearch-all</code>が<code class=\"language-text\">color-moccur.el</code>から<code class=\"language-text\">auto-load</code>される。</p>\n<h2 id=\"key-binding\"><a href=\"#key-binding\" aria-label=\"key binding permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>key-binding</h2>\n<p><code class=\"language-text\">:bind</code>キーワードを使用し以下のように設定する。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> ace-jump-mode\n  <span class=\"token lisp-property property\">:bind</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token argument\">C-</span>.\"</span> <span class=\"token punctuation\">.</span> ace-jump-mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>リストを使い以下のように複数のキーバインドを設定することも可能  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> hi-lock\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token lisp-property property\">:bind</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"M-o l\"</span> <span class=\"token punctuation\">.</span> highlight-lines-matching-regexp<span class=\"token punctuation\">)</span></span>         <span class=\"token punctuation\">(</span><span class=\"token string\">\"M-o r\"</span> <span class=\"token punctuation\">.</span> highlight-regexp<span class=\"token punctuation\">)</span>\n         <span class=\"token punctuation\">(</span><span class=\"token string\">\"M-o w\"</span> <span class=\"token punctuation\">.</span> highlight-phrase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>キーバインドは<code class=\"language-text\">:init</code>と:<code class=\"language-text\">:commands</code>キーワードを使用し、以下のようにも設定できる。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> ace-jump-mode\n   <span class=\"token lisp-property property\">:commands</span> ace-jump-mode\n   <span class=\"token lisp-property property\">:init</span>\n   <span class=\"token punctuation\">(</span><span class=\"token car\">bind-key</span> <span class=\"token string\">\"<span class=\"token argument\">C-</span>.\"</span> <span class=\"token quoted-symbol variable symbol\">'ace-jump-mode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"mode\"><a href=\"#mode\" aria-label=\"mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:mode</h2>\n<p>拡張子とメジャーモードの対応づけは<code class=\"language-text\">auto-mode-alist</code>で行なっていたが、<code class=\"language-text\">:mode</code>キーワードを使うことで簡潔に設定できるようになります。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> python-mode\n  <span class=\"token lisp-property property\">:mode</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\.py\\\\'\"</span><span class=\"token punctuation\">)</span>\n             <span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\.pyx\\\\'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"interpreter\"><a href=\"#interpreter\" aria-label=\"interpreter permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:interpreter</h2>\n<p>シェバンとメジャーモードの対応づけは、<code class=\"language-text\">:interpreter</code>キーワードを使って設定できます。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> python-mode\n     <span class=\"token lisp-property property\">:interpreter</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"python\"</span> <span class=\"token punctuation\">.</span> python-mode<span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token string\">\"python\"</span> <span class=\"token punctuation\">.</span> python-mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"hooks\"><a href=\"#hooks\" aria-label=\"hooks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>:hooks</h2>\n<p><code class=\"language-text\">:hook</code>キーワードを使用して、以下のように設定できます。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> ace-jump-mode\n    <span class=\"token lisp-property property\">:hook</span> prog-mode<span class=\"token punctuation\">)</span>\n\t\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> ace-jump-mode\n    <span class=\"token lisp-property property\">:hook</span> <span class=\"token punctuation\">(</span><span class=\"token car\">prog-mode</span> <span class=\"token punctuation\">.</span> ace-jump-mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>また、従来のように<code class=\"language-text\">add-hook</code>を用いても設定が可能。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"> <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> ace-jump-mode\n     <span class=\"token lisp-property property\">:commands</span> ace-jump-mode\n     <span class=\"token lisp-property property\">:init</span>\n     <span class=\"token punctuation\">(</span><span class=\"token car\">add-hook</span> <span class=\"token quoted-symbol variable symbol\">'prog-mode-hook</span> <span class=\"token quoted-symbol variable symbol\">#'ace-jump-mode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"まとめ\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>use-packageの使い方を簡単にまとめてみました。このくらいあればある程度の設定はできるでしょう。余力があれば加筆します。</p>","id":"4e276278-fb9c-5083-94f0-73db0c102ce4","frontmatter":{"title":"use-packagesを使ってみる","date":"2018-11-20","tags":["emacs"]},"fields":{"slug":"/emacs/use-package/"}}},{"node":{"excerpt":"大学時代から使っていたemacsの設定たちを綺麗にするという目的で、ついでにlsp-modeを導入してみようと思う。   lsp-mode https://github.com/emacs-lsp/lsp-mode   language server protocolとは language server protocol(lsp)とは、IDEやエディタとIDEが提供する機能(補間、定義jump…","html":"<p>大学時代から使っていたemacsの設定たちを綺麗にするという目的で、ついでにlsp-modeを導入してみようと思う。  </p>\n<p>lsp-mode<br>\n<a href=\"https://github.com/emacs-lsp/lsp-mode\">https://github.com/emacs-lsp/lsp-mode</a>  </p>\n<h2 id=\"language-server-protocolとは\"><a href=\"#language-server-protocol%E3%81%A8%E3%81%AF\" aria-label=\"language server protocolとは permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>language server protocolとは</h2>\n<p><a href=\"https://microsoft.github.io/language-server-protocol/\">language server protocol(lsp)</a>とは、IDEやエディタとIDEが提供する機能(補間、定義jump、ドキュメントの表示など)の間で使用されるプロトコルを定義したものである。<br>\nこれまで、IDEなどの提供する機能(補間、定義へのjump、ドキュメントの表示など)は言語ごと、IDEごとに提供されていた。<br>\nそれを取りまとめるプロトコルが定義されることで、IDEごとの格差が緩和され、emacsでもIDEと同様の機能が実現でき流ようになるということです。<br>\n詳しくは、以下が参考になると思う。  </p>\n<p><a href=\"https://microsoft.github.io/language-server-protocol/\">https://microsoft.github.io/language-server-protocol/</a><br>\n<a href=\"https://github.com/Microsoft/language-server-protocol\">https://github.com/Microsoft/language-server-protocol</a><br>\n<a href=\"https://qiita.com/atsushieno/items/ce31df9bd88e98eec5c4\">https://qiita.com/atsushieno/items/ce31df9bd88e98eec5c4</a>  </p>\n<h2 id=\"lsp-mode\"><a href=\"#lsp-mode\" aria-label=\"lsp mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lsp-mode</h2>\n<p>emacsでは、lsp-modeとeglotがlspをサポートしているみたい。今回はlsp-modeを導入する。<br>\nlsp-mode: <a href=\"https://github.com/emacs-lsp/lsp-mode\">https://github.com/emacs-lsp/lsp-mode</a><br>\nを見ながら設定していく。  </p>\n<p>melpaからインストール  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">M-x package-install <span class=\"token punctuation\">[</span>RET<span class=\"token punctuation\">]</span> lsp-mode <span class=\"token punctuation\">[</span>RET<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>以下のように設定する。  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> lsp-mode\n  <span class=\"token lisp-property property\">:custom</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-print-io</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-prefer-flymake</span> <span class=\"token quoted-symbol variable symbol\">'flymake</span><span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:commands</span> lsp<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">lsp-print-io</code>で全てのログを<code class=\"language-text\">*lsp-log*</code>に表示する。今回はflymakeを使うので、<code class=\"language-text\">(lsp-prefer-flymake &#39;flymake)</code> を設定しておく。  </p>\n<p>続いて、lsp-modeのバックエンドにcompanyを使うためにcompany-lspを、lsp-modeのUIをリッチにしてくれるlsp-uiを入れる。<br>\nそれぞれmelpaからインストールします。  </p>\n<h3 id=\"company-lsp\"><a href=\"#company-lsp\" aria-label=\"company lsp permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>company-lsp</h3>\n<p><a href=\"https://github.com/tigersoldier/company-lsp\">https://github.com/tigersoldier/company-lsp</a>  </p>\n<p>companyのバックエンドに設定  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> <span class=\"token quoted-symbol variable symbol\">'company-lsp</span>\n  <span class=\"token lisp-property property\">:after</span> <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-mode</span> company<span class=\"token punctuation\">)</span>\n  <span class=\"token lisp-property property\">:init</span> <span class=\"token punctuation\">(</span><span class=\"token car\">push</span> <span class=\"token quoted-symbol variable symbol\">'company-lsp</span> company-backends<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"lsp-ui\"><a href=\"#lsp-ui\" aria-label=\"lsp ui permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lsp-ui</h3>\n<p><a href=\"https://github.com/emacs-lsp/lsp-ui\">https://github.com/emacs-lsp/lsp-ui</a>  </p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> lsp-ui\n  <span class=\"token lisp-property property\">:custom</span>\n  <span class=\"token comment\">;; lsp-ui-doc</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-enable</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-header</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-include-signature</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-position</span> <span class=\"token quoted-symbol variable symbol\">'at-point</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">;; top, bottom, or at-point</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-max-width</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-max-height</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-use-childframe</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-doc-use-webkit</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\">;; lsp-ui-flycheck</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-flycheck-enable</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">;; lsp-ui-peek</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-peek-enable</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-peek-peek-height</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-peek-list-width</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-peek-fontify</span> <span class=\"token quoted-symbol variable symbol\">'on-demand</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">;; never, on-demand, or always</span>\n  \n  <span class=\"token comment\">;; lsp-ui-imenu</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-imenu-enable</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-imenu-kind-position</span> <span class=\"token quoted-symbol variable symbol\">'top</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token comment\">;; lsp-ui-sideline</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">lsp-ui-sideline-enable</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token lisp-property property\">:commands</span> lsp-ui-mode\n  <span class=\"token lisp-property property\">:config</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">add-hook</span> <span class=\"token quoted-symbol variable symbol\">'lsp-mode-hook</span> <span class=\"token quoted-symbol variable symbol\">'lsp-ui-mode</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">eval-after-load</span> <span class=\"token string\">\"flymake\"</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> flymake-fringe-indicator-position <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>主な機能は以下</p>\n<ul>\n<li>lsp-ui-doc:<br>\nリファレンス表示<br>\n(lsp-ui-doc-use-childframe t)でchildframeを使ったドキュメント表示ができる。webkitでもできるみたいだけどうまくいかない  </li>\n<li>lsp-ui-peek:<br>\n定義ジャンプ  </li>\n<li>lsp-ui-sideline<br>\n現在行の情報を表示(肩情報はchildframeで表示され、表示情報が重複しているので非表示にした) </li>\n</ul>\n<p>動いている様子は、各GitHubのページで確認  </p>\n<p>以上で、lsp-modeの設定は終了</p>\n<h2 id=\"各言語の設定\"><a href=\"#%E5%90%84%E8%A8%80%E8%AA%9E%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"各言語の設定 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>各言語の設定</h2>\n<p>goのLanguage Serverはbingoを使うと良いそうです。</p>\n<p>bingo<br>\n<a href=\"https://github.com/saibing/bingo\">https://github.com/saibing/bingo</a>  </p>\n<p>これもmelpaでインストールし、以下のように設定</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lisp line-numbers\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> go-mode\n  <span class=\"token lisp-property property\">:config</span>\n  <span class=\"token punctuation\">(</span><span class=\"token car\">add-hook</span> <span class=\"token quoted-symbol variable symbol\">'go-mode-hook</span> <span class=\"token quoted-symbol variable symbol\">#'lsp</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"まとめ\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>lsp-modeを使って、IDEで提供されている機能をemacsでも使えるように設定しました。これでgo langで補間、リファレンス参照、定義ジャンプなどできるようになりました。その他設定の見直しは今後記事に落としていくということで。</p>","id":"71d47308-f922-5af4-8d02-396caf7a00ad","frontmatter":{"title":"lsp-modeを導入する","date":"2018-11-20","tags":["emacs"]},"fields":{"slug":"/emacs/lsp-mode/"}}},{"node":{"excerpt":"はじめに 現在、サーバー上にHugoとHugoが生成した静的ファイルを置いてブログを公開している。\n静的ファイルの生成とmdファイルや画像ファイルのアップロードのためfalconを使ってapiサーバーを作った。\nfalconをつかったのは、flaskやbottleは使ったことあったので、使ったことないものをということで。 クライアント クライアントにはpythonのrequests…","html":"<h2 id=\"はじめに\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>現在、サーバー上にHugoとHugoが生成した静的ファイルを置いてブログを公開している。\n静的ファイルの生成とmdファイルや画像ファイルのアップロードのためfalconを使ってapiサーバーを作った。\nfalconをつかったのは、flaskやbottleは使ったことあったので、使ったことないものをということで。</p>\n<h2 id=\"クライアント\"><a href=\"#%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88\" aria-label=\"クライアント permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クライアント</h2>\n<p>クライアントにはpythonの<a href=\"https://requests-docs-ja.readthedocs.io/en/latest/user/quickstart/#post\">requests</a>を使います。</p>\n<p>fileにタプルでファイル名を明示的に渡せる。\npostの引数にfilesで渡すと、contents-typeもよしなにしてくれるんですね。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">image_name <span class=\"token operator\">=</span> <span class=\"token string\">\"test.png\"</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>image_file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> image<span class=\"token punctuation\">:</span>\n\tfiles <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>image_name<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\tresponse <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span>files<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"サーバー\"><a href=\"#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC\" aria-label=\"サーバー permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サーバー</h2>\n<p>falconはコンテナ上で動かします。ファイルアップロードのリクエストを受けると、\nサーバー上のストレージに画像を保存します。</p>\n<p>なんかできないと思ってたら、middlewareにMultipartMiddlewareを指定しないとだめだった。</p>\n<p>fileは次のようにrequestから取得できる</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">image <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>get_param<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>\nraw <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>ファイル名は次のように取得</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">image_name = image.filename</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>実際は、corsとかあるがそれを省いた、アップロードだけの全体は以下のようになる。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> falcon_multipart<span class=\"token punctuation\">.</span>middleware <span class=\"token keyword\">import</span> MultipartMiddleware\n<span class=\"token keyword\">import</span> falcon\n<span class=\"token keyword\">import</span> json\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UploadImage</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        image <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>get_param<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>\n        raw <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        image_name <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>filename\n        filepath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"static\"</span><span class=\"token punctuation\">,</span> image_name<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>raw<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> IOError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"save file faild :\"</span> <span class=\"token operator\">+</span> filepath<span class=\"token punctuation\">)</span>\n\t\t\tresp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> to_resp<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"save img \"</span> <span class=\"token operator\">+</span> filepath<span class=\"token punctuation\">)</span>\n\t\t\t\n<span class=\"token keyword\">def</span> <span class=\"token function\">to_resp</span><span class=\"token punctuation\">(</span>status_code<span class=\"token punctuation\">,</span> contents<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> status_code<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"contents\"</span><span class=\"token punctuation\">:</span> contents\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> falcon<span class=\"token punctuation\">.</span>API<span class=\"token punctuation\">(</span>middleware<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>MultipartMiddleware<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/image\"</span><span class=\"token punctuation\">,</span> UploadImage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">from</span> wsgiref <span class=\"token keyword\">import</span> simple_server\n    httpd <span class=\"token operator\">=</span> simple_server<span class=\"token punctuation\">.</span>make_server<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span>\n    httpd<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"a82398e9-c1d8-5d8e-871f-9cdabbbebf46","frontmatter":{"title":"falconでアップロードサーバーを作る","date":"2018-10-16","tags":["hugo","python","falcon"]},"fields":{"slug":"/falcon/falcon-image-upload/"}}},{"node":{"excerpt":"はじめに Hugoをおいているwebサーバーに画像や、mdファイルをアップロードするためのapiサーバーとしてfalconを使ってみた。ORMなど必要なく、簡単なアップロードができれば良いということで、軽量さとシンプルさが特徴のfalconを使う。 簡単なtipsをメモしておく。 シンプルな例 falconの公式に乗っているように、シンプルな例は次のようになる。 処理シーケンス falcon…","html":"<h2 id=\"はじめに\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h2>\n<p>Hugoをおいているwebサーバーに画像や、mdファイルをアップロードするためのapiサーバーとして<a href=\"https://falconframework.org/\">falcon</a>を使ってみた。ORMなど必要なく、簡単なアップロードができれば良いということで、軽量さとシンプルさが特徴のfalconを使う。</p>\n<p>簡単なtipsをメモしておく。</p>\n<h2 id=\"シンプルな例\"><a href=\"#%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AA%E4%BE%8B\" aria-label=\"シンプルな例 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>シンプルな例</h2>\n<p>falconの公式に乗っているように、シンプルな例は次のようになる。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># sample.py</span>\n\n<span class=\"token keyword\">import</span> falcon\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">QuoteResource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"Handles GET requests\"\"\"</span>\n        quote <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'quote'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"I've always been more interested in \"</span>\n                <span class=\"token string\">\"the future than in the past.\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'author'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Grace Hopper'</span>\n        <span class=\"token punctuation\">}</span>\n\n        resp<span class=\"token punctuation\">.</span>media <span class=\"token operator\">=</span> quote\n\napi <span class=\"token operator\">=</span> falcon<span class=\"token punctuation\">.</span>API<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\napi<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">'/quote'</span><span class=\"token punctuation\">,</span> QuoteResource<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"処理シーケンス\"><a href=\"#%E5%87%A6%E7%90%86%E3%82%B7%E3%83%BC%E3%82%B1%E3%83%B3%E3%82%B9\" aria-label=\"処理シーケンス permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>処理シーケンス</h2>\n<p>falconにはmiddlewareの他に、hooksというものが使える。\nhooksを含めた処理シーケンスは次のようになる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Middleware&#39;s process_request\nMiddleware&#39;s process_resource\nHook&#39;s before\nResource&#39;s on_****\nHook&#39;s after\nMiddleware&#39;s process_response</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>引用：<a href=\"https://qiita.com/yohjizzz/items/f46bb3bc7b7c40768836\">https://qiita.com/yohjizzz/items/f46bb3bc7b7c40768836</a></p>\n<p>middlewareを使った、認証系の共通処理はよく見るが、hookが使えるのは良いですね。</p>\n<h2 id=\"hooks\"><a href=\"#hooks\" aria-label=\"hooks permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hooks</h2>\n<p>hooksは以下のように使う。(<a href=\"https://falcon.readthedocs.io/en/stable/api/hooks.html\">公式</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">validate_image_type</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n@falcon<span class=\"token punctuation\">.</span>before<span class=\"token punctuation\">(</span>validate_image_type<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">on_post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>処理を差し込みたいメソッドにでコレーターでつけるだけ。</p>\n<h2 id=\"middleware\"><a href=\"#middleware\" aria-label=\"middleware permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>middleware</h2>\n<p>corsくらいしか使わなかったが、dbのconnection poolとかに使うようのものとかあるんだろう。(<a href=\"https://falcon.readthedocs.io/en/stable/api/middleware.html\">公式</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CORSMiddleware</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">process_request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        resp<span class=\"token punctuation\">.</span>set_header<span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"エラーハンドリング\"><a href=\"#%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0\" aria-label=\"エラーハンドリング permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>エラーハンドリング</h2>\n<p>routeが見つからなかった時に、エラーリスポンスを返したいときは以下のようにする。(<a href=\"https://falcon.readthedocs.io/en/stable/api/errors.html\">公式</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Index</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        resp<span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> falcon<span class=\"token punctuation\">.</span>API<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_sink<span class=\"token punctuation\">(</span>handle_404<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">from</span> wsgiref <span class=\"token keyword\">import</span> simple_server\n    httpd <span class=\"token operator\">=</span> simple_server<span class=\"token punctuation\">.</span>make_server<span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.7\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span>\n    httpd<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>exceptionなどが起きた場合でも、200のリスポンスを返し、レスポンスボディの中でエラーコードとメッセージを返したかったが、うまく行かなかったので、これは次の機会にやる。</p>\n<h2 id=\"requestの取得\"><a href=\"#request%E3%81%AE%E5%8F%96%E5%BE%97\" aria-label=\"requestの取得 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>requestの取得</h2>\n<p>requsetの取得は以下のようになる。(<a href=\"https://falcon.readthedocs.io/en/stable/api/request_and_response.html\">公式</a>)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HealthCheck</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">on_get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span> <span class=\"token comment\"># headerの取得</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># request paramの取得</span>\n\n   <span class=\"token comment\"># request bodyの取得</span>\n    body <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span>\n\napp <span class=\"token operator\">=</span> falcon<span class=\"token punctuation\">.</span>API<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>add_route<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">from</span> wsgiref <span class=\"token keyword\">import</span> simple_server\n    httpd <span class=\"token operator\">=</span> simple_server<span class=\"token punctuation\">.</span>make_server<span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.7\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span>\n    httpd<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","id":"f2c90262-9f64-5034-9ebe-f80f8c77a3d4","frontmatter":{"title":"falconを使ってみた","date":"2018-10-16","tags":["python","falcon"]},"fields":{"slug":"/falcon/falcon-tips/"}}},{"node":{"excerpt":"Hugoの記事を更新順にソートするメモです。 まず、Hugoの記事に更新時刻情報を付与します。markdownのヘッダーにdate情報を書いても良いのですが、gitで管理している場合には、Lastmodで更新時刻が取得できるのでそれを使います。 そのほかにもgitから情報が取得できます。https://gohugo.io/variables/git/   config.toml…","html":"<p>Hugoの記事を更新順にソートするメモです。<br>\nまず、Hugoの記事に更新時刻情報を付与します。markdownのヘッダーにdate情報を書いても良いのですが、gitで管理している場合には、<a href=\"https://gohugo.io/functions/format/\">Lastmod</a>で更新時刻が取得できるのでそれを使います。<br>\nそのほかにもgitから情報が取得できます。<a href=\"https://gohugo.io/variables/git/\">https://gohugo.io/variables/git/</a>  </p>\n<p>config.tomlに以下のように記述します。  </p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-toml line-numbers\"><code class=\"language-toml\"><span class=\"token key property\">enableGitInfo</span><span class=\"token punctuation\">=</span><span class=\"token boolean\">true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>以下のように使う。  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{{ .Lastmod.Format &quot;2006/01/02&quot; }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>この更新事項を使って、記事を並び替えます。<br>\n記事のリストを表示するhtmlはもともと以下のように記述してありました。  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{{ $paginator := .Paginate (where .Data.Pages &quot;Type&quot; &quot;post&quot;) 10 }}\n{{ range $paginator.Pages }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>以下のリンクを参考にします。<br>\n<a href=\"https://gohugo.io/templates/lists/\">https://gohugo.io/templates/lists/</a><br>\nlastmod以外にも並び替えが行えます。  </p>\n<p>結局、以下のように記述しました。  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{{ $paginator := .Paginate (where .Data.Pages &quot;Type&quot; &quot;post&quot;).ByLastmod.Reverse 10 }}\n{{ range $paginator.Pages }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>","id":"174de46f-518a-5db7-b874-5cd6ae9679d8","frontmatter":{"title":"Hugoの記事を更新順にソートする","date":"2018-10-15","tags":["hugo"]},"fields":{"slug":"/hugo/hugo-date-sort/"}}},{"node":{"excerpt":"Hugoで書いた記事が検索で引っかからないなと思っていたら、descriptionタグが設定されていませんでした。\nこれでは検索に引っかからないのでdescriptionタグをつけましょう! html側で次のように書くと、markdownに書いたdescriptionが参照できます。 markdown側では、ヘッダーに次のように記述します。 これまで書いた記事全てに、description…","html":"<p>Hugoで書いた記事が検索で引っかからないなと思っていたら、descriptionタグが設定されていませんでした。\nこれでは検索に引っかからないのでdescriptionタグをつけましょう!</p>\n<p>html側で次のように書くと、markdownに書いたdescriptionが参照できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\">{{ .Description }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>markdown側では、ヘッダーに次のように記述します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">description=&quot;hogehoge&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>これまで書いた記事全てに、descriptionをつけていくのは面倒ですね。</p>\n<p>次のようにサイトサマリーを参照することも可能です</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\">{{ .Summary }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>ただし、デフォルトでサマリーが大きくなりすぎるので、config.tomlに次のような記述を追加します。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yaml line-numbers\"><code class=\"language-yaml\">hasCJKLanguage = true</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>こうすることでサマリーがいい感じのサイズになります。</p>\n<p>参考：<a href=\"https://blog.awm.jp/2016/01/02/hugo/\">https://blog.awm.jp/2016/01/02/hugo/</a></p>\n<p>最終的に、header.htmlなどに次のように記述しておけば、descriptionを書いておくとそちらが使われるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\">{{ if .Description }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ .Description }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n{{ else }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ .Summary }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n{{ end }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"サイトのディスクリプションと記事のディスクリプションを分ける追記\"><a href=\"#%E3%82%B5%E3%82%A4%E3%83%88%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8%E8%A8%98%E4%BA%8B%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%88%86%E3%81%91%E3%82%8B%E8%BF%BD%E8%A8%98\" aria-label=\"サイトのディスクリプションと記事のディスクリプションを分ける追記 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サイトのディスクリプションと記事のディスクリプションを分ける(追記)</h2>\n<p><code class=\"language-text\">{{ if .IsHome }}</code>でトップページかどうか判定できるので、トップページならば、configのディスクリプションを使い、記事内ならば記事に設定してあるディスクリプションを使う。</p>\n<p>html側は次のように記述する。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\">{{ if .IsHome }}\n{{ with .Site.Params.description }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ . }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n{{ end }}\n{{ end }}\n\n{{ if .Description }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ .Description }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n{{ else }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ .Summary }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n{{ end }}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>configに次のように記述する。</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token punctuation\">[</span>params<span class=\"token punctuation\">]</span>\ndescription=\"hogehoge\"</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>configで任意の変数を指定するのは、paramsの中じゃないとだめなので注意。\n参考：<a href=\"https://gohugo.io/getting-started/configuration/\">https://gohugo.io/getting-started/configuration/</a></p>\n<p>他のもっとスマートな方法があれば教えてください。</p>","id":"86669257-ae74-5295-95e2-7f6dad903f21","frontmatter":{"title":"Hugoの記事にdescriptionを追加する","date":"2018-10-15","tags":["hugo"]},"fields":{"slug":"/hugo/hugo-add-site-description/"}}},{"node":{"excerpt":"Hugoにgoogle analytics(ga)を導入しようと思ったら意外と簡単だった。 まず、gaアカウントを作成。 config.tomlに を設定するだけ。","html":"<p>Hugoにgoogle analytics(ga)を導入しようと思ったら意外と簡単だった。</p>\n<p>まず、gaアカウントを作成。</p>\n<p>config.tomlに</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">googleAnalytics = &quot;{ga tracking ID}&quot;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>を設定するだけ。</p>","id":"ede7c668-ac61-567c-b603-a687a432b547","frontmatter":{"title":"Hugoにgoogle analyticsを導入する","date":"2018-10-15","tags":["google-analytics","hugo"]},"fields":{"slug":"/hugo/hugo-ga/"}}},{"node":{"excerpt":"GitHub Pagesを使ってHugoを公開する手順をメモ やりたいこととしては、 Hugoのプロジェクトを丸ごとgitで管理 プロジェクトの下に作られるpublicをGitHub Pagesで公開 独自ドメインの設定 の3つです。 GitHub Pagesで公開 まずは、Hugoのプロジェクトルートをgitで管理します。 GitHub Pagesで公開するために、GitHub…","html":"<p>GitHub Pagesを使ってHugoを公開する手順をメモ<br>\nやりたいこととしては、</p>\n<ul>\n<li>Hugoのプロジェクトを丸ごとgitで管理</li>\n<li>プロジェクトの下に作られるpublicをGitHub Pagesで公開</li>\n<li>独自ドメインの設定</li>\n</ul>\n<p>の3つです。</p>\n<h2 id=\"github-pagesで公開\"><a href=\"#github-pages%E3%81%A7%E5%85%AC%E9%96%8B\" aria-label=\"github pagesで公開 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pagesで公開</h2>\n<p>まずは、Hugoのプロジェクトルートをgitで管理します。<br>\nGitHub Pagesで公開するために、GitHubのリポジトリの設定からPagesで公開するための設定を行います。このとき、そのまま公開すると、Hugoをビルドして生成されるファイルはプロジェクトルート直下のpublic以下に生成されるので、</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> https://<span class=\"token punctuation\">{</span>ユーザー名<span class=\"token punctuation\">}</span>.github.io/<span class=\"token punctuation\">{</span>リポジトリ名<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">{</span>public<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>というように、URLにpublicが付いてしまいます。これは嫌なので、git subtreeを使います。<br>\ngh-pagesという新しいブランチを作成し、public以下のファイルのみをpushしています。github pagesではgh-pagesを公開するよう設定します。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> subtree push --prefix public/ <span class=\"token builtin class-name\">.</span> gh-pages\n$ <span class=\"token function\">git</span> push origin gh-pages:gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>GitHubから独自ドメインの設定をすると、ブランチgh-pagesにCNAMEファイルが追加、commitされるのですが、この変更をローカルのmasterに取り込めないという問題が発生しました。このため、ローカルで記事を追加したときなど、non-fast-forwardでpush、pullもできなくなりました。そこで、しょうがなくmaster側にローカルからCNAMEファイルを追加しました。  </p>\n<p>それでもうまくいかないときは、エラー文のcommitのハッシュを使って無理やりpushしてとりあえず回避してます。</p>\n<p>例</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> $ <span class=\"token function\">git</span> subtree push --prefix public/ <span class=\"token builtin class-name\">.</span> gh-pages\n <span class=\"token function\">git</span> push using:  <span class=\"token builtin class-name\">.</span> gh-pages\n To <span class=\"token builtin class-name\">.</span>     <span class=\"token number\">59</span> <span class=\"token punctuation\">(</span><span class=\"token number\">58</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span>rejected<span class=\"token punctuation\">]</span>        95625bda7b4247ff0d05b2e76c8db1cbb7e87dad -<span class=\"token operator\">></span> gh-pages <span class=\"token punctuation\">(</span>non-fast-forward<span class=\"token punctuation\">)</span>\n error: failed to push some refs to <span class=\"token string\">'.'</span>\n hint: Updates were rejected because a pushed branch tip is behind its remote\n hint: counterpart. Check out this branch and integrate the remote changes\n hint: <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">'git pull ...'</span><span class=\"token punctuation\">)</span> before pushing again.\n hint: See the <span class=\"token string\">'Note about fast-forwards'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'git push --help'</span> <span class=\"token keyword\">for</span> details.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> $ <span class=\"token function\">git</span> push origin 95625bda7b4247ff0d05b2e76c8db1cbb7e87dad:gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"独自ドメインの設定\"><a href=\"#%E7%8B%AC%E8%87%AA%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"独自ドメインの設定 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>独自ドメインの設定</h2>\n<p>今回は、お名前.comでドメインを取得しました。お名前.comでDNSの設定をします。<br>\nGitHub Pagesのドメインは</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> https://<span class=\"token punctuation\">{</span>ユーザー名<span class=\"token punctuation\">}</span>.github.io/<span class=\"token punctuation\">{</span>リポジトリ名<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>なので、取得したドメインでGitHub PagesのドメインがひけるようにCNAMEの設定を行います。  </p>\n<p>GitHub側では、リポジトリの設定からCustom domainを取得したドメインで設定します。Custom domainを設定すると、Enforce HTTPSにチェックを入れることができるので、設定するとhttpsで通信が行えるようになります。  </p>","id":"9172e99b-a9db-5a5f-a0a1-b91044277140","frontmatter":{"title":"HugoをGitHub Pagesで公開する","date":"2018-10-15","tags":["hugo"]},"fields":{"slug":"/hugo/hugo-git-pages/"}}},{"node":{"excerpt":"Hugoでコードのシンタックスハイライトする場合のメモ Hugo自体の機能を使う方法と、ハイライトする機能を持つjavascriptを読み込む2つの方法がある。   Hugo自体の機能使う Hugo 0.28からGo機能でシンタックスハイライトが可能になった。 Syntax Highlighting config.tomlに以下のように記述   以下のコマンドでcss…","html":"<p>Hugoでコードのシンタックスハイライトする場合のメモ<br>\nHugo自体の機能を使う方法と、ハイライトする機能を持つjavascriptを読み込む2つの方法がある。  </p>\n<h2 id=\"hugo自体の機能使う\"><a href=\"#hugo%E8%87%AA%E4%BD%93%E3%81%AE%E6%A9%9F%E8%83%BD%E4%BD%BF%E3%81%86\" aria-label=\"hugo自体の機能使う permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hugo自体の機能使う</h2>\n<p>Hugo 0.28からGo機能でシンタックスハイライトが可能になった。<br>\n<a href=\"https://gohugo.io/content-management/syntax-highlighting/\">Syntax Highlighting</a><br>\nconfig.tomlに以下のように記述  </p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-toml line-numbers\"><code class=\"language-toml\"><span class=\"token key property\">pygmentsCodefences</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token key property\">pygmentsUseClasses</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>以下のコマンドでcssを生成する。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token variable\">$hugo</span> gen chromastyles --style<span class=\"token operator\">=</span>monokai <span class=\"token operator\">></span> syntax.css</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>生成したcssをindex.htmlなどから読み込むと反映される。<br>\n<code class=\"language-text\">--style</code>オプションの指定は、<a href=\"https://help.farbox.com/pygments.html\">pygments</a>から探す。  </p>\n<h2 id=\"highlightjsを使う\"><a href=\"#highlightjs%E3%82%92%E4%BD%BF%E3%81%86\" aria-label=\"highlightjsを使う permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>highlightjsを使う</h2>\n<p><a href=\"https://highlightjs.org/\">highlightjs</a><br>\n対応言語が多いのがメリット。  </p>\n<p>以下のようにcdnからとってくるようにしておくと良い。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/default.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/highlight.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">hljs<span class=\"token punctuation\">.</span><span class=\"token function\">initHighlightingOnLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>一行目の記述を以下のように書き換えることでテーマを選択できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.15.6/styles/zenburn.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","id":"4989e2ac-46f8-51a2-84a8-ace95069a9e6","frontmatter":{"title":"Hugoの記事でコードハイライトする","date":"2018-10-15","tags":["hugo"]},"fields":{"slug":"/hugo/hugo-hilight/"}}},{"node":{"excerpt":"リンクは新しいウィンドウで開いて欲しい派なんだけど、Hugoではデフォルトで通常のリンクの開きかた(?)をする。 hrefではを指定すれば良いのだが、markdownでどうすれば良いのか調べた。\nHugoでは次のようにconfig.tomlするといける。 簡単！ 参考： https://gohugo.io/getting-started/configuration/ https://www…","html":"<p>リンクは新しいウィンドウで開いて欲しい派なんだけど、Hugoではデフォルトで通常のリンクの開きかた(?)をする。</p>\n<p>hrefでは<code class=\"language-text\">target=&#39;_blank&#39;</code>を指定すれば良いのだが、markdownでどうすれば良いのか調べた。\nHugoでは次のようにconfig.tomlするといける。</p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-toml line-numbers\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">blackfriday</span><span class=\"token punctuation\">]</span>\n   <span class=\"token key property\">hrefTargetBlank</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>簡単！</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://gohugo.io/getting-started/configuration/\">https://gohugo.io/getting-started/configuration/</a></li>\n<li><a href=\"https://www.meganii.com/blog/2017/02/25/hugo-markdown-href-target-blank/\">https://www.meganii.com/blog/2017/02/25/hugo-markdown-href-target-blank/</a></li>\n</ul>","id":"2881276b-98e3-511d-b3c0-a7630e23117c","frontmatter":{"title":"Hugoでリンクを新しいウィンドウで開く","date":"2018-10-15","tags":["hugo"]},"fields":{"slug":"/hugo/hugo-href-to-target-blank/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":10,"skip":20,"numPages":5,"currentPage":3}}}