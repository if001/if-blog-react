{"componentChunkName":"component---src-templates-blog-post-js","path":"/neuralnet/combine_model/","webpackCompilationHash":"306e2acfd9202ed54845","result":{"data":{"site":{"siteMetadata":{"url":"https://www.if-blog.site","title":"アンドロイドは推理小説を書くか?","labels":[{"tag":"react","tech":"React","name":"DiReact","size":17,"color":"royalblue"},{"tag":"gatsby","tech":"gatsby","name":"DiReact","size":17,"color":"indigo"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":17,"color":"green"},{"tag":"git","tech":"Git","name":"DiGit","size":17,"color":"black"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":17,"color":"black"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":17,"color":"teal"},{"tag":"python","tech":"python","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"keras","tech":"keras","name":"DiPython","size":17,"color":"red"},{"tag":"seq2seq","tech":"seq2seq","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"word2vec","tech":"word2vec","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"seqgan","tech":"seqgan","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":17,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":17,"color":"red"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":17,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":17,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":17,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":17,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":17,"color":"deepskyblue"},{"tag":"go","tech":"go","name":"DiGo","size":17,"color":"black"},{"tag":"golang","tech":"Golang","name":"DiGo","size":17,"color":"black"},{"tag":"読書","tech":"読書","name":"FaBookOpen","size":17,"color":"blue"},{"tag":"読了","tech":"読了","name":"FaBook","size":17,"color":"green"},{"tag":"hugo","tech":"Hugo","name":"FaServer","size":17,"color":"deeppink"},{"tag":"falcon","tech":"falcon","name":"FaServer","size":17,"color":"dodgerblue"},{"tag":"docker","tech":"Docker","name":"DiDocker","size":17,"color":"blue"},{"tag":"aws","tech":"Aws","name":"DiAws","size":17,"color":"orange"},{"tag":"nlp","tech":"NLP","name":"FaLanguage","size":17,"color":"black"},{"tag":"firebase","tech":"FireBase","name":"DiGoogleCloudPlatform","size":17,"color":"blue"},{"tag":"deeplearning","tech":"DeepLearning","name":"FaBrain","size":17,"color":"blue"},{"tag":"poem","tech":"poem","name":"FaPenFancy","size":17,"color":"sandybrown"},{"tag":"rust","tech":"rust","name":"DiRust","size":17,"color":"black"},{"tag":"tex","tech":"tex","name":"FaTextHeight","size":17,"color":"teal"},{"tag":"論文","tech":"論文","name":"FaFileSignature","size":17,"color":"brown"},{"tag":"emacs","tech":"emasc","name":"FaEdit","size":17,"color":"purple"},{"tag":"google-analytics","tech":"google-analytics","name":"DiGoogleAnalytics","size":17,"color":"blue"}]}},"markdownRemark":{"html":"<p>autoencoderなどを作っていると、保存や推論を行う上での再利用性を考え、encoderとdecoderは分けてModelを作りたいことがある。</p>\n<p>autoencoderの学習の際には、作成したencoderのModelとdecoderのModelを結合する。</p>\n<p>Modelの結合は前はできなかった気がするが、できるようになっていたのでメモ。</p>\n<p>Kerasのバージョンは、2.1.1</p>\n<p>まずは、シンプルなモデルを2つ作る。input→model1→model2→outputを作る。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">model1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    layer_input <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    layer_output <span class=\"token operator\">=</span> Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">)</span>\n    model <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">,</span> layer_output<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">model2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    layer_input <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    layer_output <span class=\"token operator\">=</span> Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">)</span>\n    model <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">,</span> layer_output<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>まず、model1へのインプットを作る。model1のアウトプットをmodel2のインプットにし、Modelのインスタンスを作る。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">m1 <span class=\"token operator\">=</span> model1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nm2 <span class=\"token operator\">=</span> model2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ninp <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel1_output <span class=\"token operator\">=</span> m1<span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">)</span>\nout <span class=\"token operator\">=</span> m2<span class=\"token punctuation\">(</span>model1_output<span class=\"token punctuation\">)</span>\nmodel <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>すると、こんな感じでモデルが結合できたのが確認できる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">Using TensorFlow backend.\n_________________________________________________________________\nLayer <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>                 Output Shape              Param <span class=\"token comment\">#</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\ninput_1 <span class=\"token punctuation\">(</span>InputLayer<span class=\"token punctuation\">)</span>         <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">0</span>\n_________________________________________________________________\ndense_1 <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">110</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nTotal params: <span class=\"token number\">110</span>\nTrainable params: <span class=\"token number\">110</span>\nNon-trainable params: <span class=\"token number\">0</span>\n_________________________________________________________________\n_________________________________________________________________\nLayer <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>                 Output Shape              Param <span class=\"token comment\">#</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\ninput_2 <span class=\"token punctuation\">(</span>InputLayer<span class=\"token punctuation\">)</span>         <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">0</span>\n_________________________________________________________________\ndense_2 <span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">110</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nTotal params: <span class=\"token number\">110</span>\nTrainable params: <span class=\"token number\">110</span>\nNon-trainable params: <span class=\"token number\">0</span>\n_________________________________________________________________\n_________________________________________________________________\nLayer <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>                 Output Shape              Param <span class=\"token comment\">#</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\ninput_3 <span class=\"token punctuation\">(</span>InputLayer<span class=\"token punctuation\">)</span>         <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">0</span>\n_________________________________________________________________\nmodel_1 <span class=\"token punctuation\">(</span>Model<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">110</span>\n_________________________________________________________________\nmodel_2 <span class=\"token punctuation\">(</span>Model<span class=\"token punctuation\">)</span>              <span class=\"token punctuation\">(</span>None, None, <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>          <span class=\"token number\">110</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\nTotal params: <span class=\"token number\">220</span>\nTrainable params: <span class=\"token number\">220</span>\nNon-trainable params: <span class=\"token number\">0</span>\n_________________________________________________________________</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>コード全体はこんな感じ。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> keras<span class=\"token punctuation\">.</span>layers <span class=\"token keyword\">import</span> Dense\n<span class=\"token keyword\">from</span> keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">model1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    layer_input <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    layer_output <span class=\"token operator\">=</span> Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">)</span>\n    model <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">,</span> layer_output<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">model2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    layer_input <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    layer_output <span class=\"token operator\">=</span> Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">)</span>\n    model <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>layer_input<span class=\"token punctuation\">,</span> layer_output<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> model\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    m1 <span class=\"token operator\">=</span> model1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    m2 <span class=\"token operator\">=</span> model2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    inp <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    x <span class=\"token operator\">=</span> m1<span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">)</span>\n    out <span class=\"token operator\">=</span> m2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    model <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>inp<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span>\n    model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n   main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>モデルインスタンスの再利用性が上がってて使いやすくなってる。  </p>","frontmatter":{"title":"kerasでモデルを結合する","date":"2019-09-23","tags":["keras","deeplearning"]},"tableOfContents":""}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/neuralnet/combine_model/"}}}