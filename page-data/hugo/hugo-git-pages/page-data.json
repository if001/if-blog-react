{"componentChunkName":"component---src-templates-blog-post-js","path":"/hugo/hugo-git-pages/","webpackCompilationHash":"21b8a6248624d6296adb","result":{"data":{"site":{"siteMetadata":{"url":"https://www.if-blog.site","title":"アンドロイドは推理小説を書くか?","labels":[{"tag":"react","tech":"React","name":"DiReact","size":17,"color":"royalblue"},{"tag":"gatsby","tech":"gatsby","name":"DiReact","size":17,"color":"indigo"},{"tag":"nodejs","tech":"Node.js","name":"DiNodejsSmall","size":17,"color":"green"},{"tag":"git","tech":"Git","name":"DiGit","size":17,"color":"black"},{"tag":"javascript","tech":"JavaScript","name":"DiJsBadge","size":17,"color":"black"},{"tag":"css","tech":"CSS","name":"DiCss3Full","size":17,"color":"teal"},{"tag":"python","tech":"python","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"keras","tech":"keras","name":"DiPython","size":17,"color":"red"},{"tag":"seq2seq","tech":"seq2seq","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"word2vec","tech":"word2vec","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"seqgan","tech":"seqgan","name":"DiPython","size":17,"color":"dodgerblue"},{"tag":"ruby","tech":"Ruby","name":"DiRuby","size":17,"color":"crimson"},{"tag":"java","tech":"Java","name":"FaJava","size":17,"color":"red"},{"tag":"angular","tech":"Angular","name":"DiAngularSimple","size":17,"color":"red"},{"tag":"html","tech":"HTML","name":"FaHtml5","size":17,"color":"darkorange"},{"tag":"php","tech":"php","name":"DiPhp","size":17,"color":"violet"},{"tag":"mongodb","tech":"MongoDB","name":"DiMongodb","size":17,"color":"green"},{"tag":"vscode","tech":"VS Code","name":"DiVisualstudio","size":17,"color":"deepskyblue"},{"tag":"go","tech":"go","name":"DiGo","size":17,"color":"black"},{"tag":"golang","tech":"Golang","name":"DiGo","size":17,"color":"black"},{"tag":"読書","tech":"読書","name":"FaBookOpen","size":17,"color":"blue"},{"tag":"読了","tech":"読了","name":"FaBook","size":17,"color":"green"},{"tag":"hugo","tech":"Hugo","name":"FaServer","size":17,"color":"deeppink"},{"tag":"falcon","tech":"falcon","name":"FaServer","size":17,"color":"dodgerblue"},{"tag":"docker","tech":"Docker","name":"DiDocker","size":17,"color":"blue"},{"tag":"aws","tech":"Aws","name":"DiAws","size":17,"color":"orange"},{"tag":"nlp","tech":"NLP","name":"FaLanguage","size":17,"color":"black"},{"tag":"firebase","tech":"FireBase","name":"DiGoogleCloudPlatform","size":17,"color":"blue"},{"tag":"deeplearning","tech":"DeepLearning","name":"FaBrain","size":17,"color":"blue"},{"tag":"poem","tech":"poem","name":"FaPenFancy","size":17,"color":"sandybrown"},{"tag":"rust","tech":"rust","name":"DiRust","size":17,"color":"black"},{"tag":"tex","tech":"tex","name":"FaTextHeight","size":17,"color":"teal"},{"tag":"論文","tech":"論文","name":"FaFileSignature","size":17,"color":"brown"},{"tag":"emacs","tech":"emasc","name":"FaEdit","size":17,"color":"purple"},{"tag":"google-analytics","tech":"google-analytics","name":"DiGoogleAnalytics","size":17,"color":"blue"}]}},"markdownRemark":{"html":"<p>GitHub Pagesを使ってHugoを公開する手順をメモ<br>\nやりたいこととしては、</p>\n<ul>\n<li>Hugoのプロジェクトを丸ごとgitで管理</li>\n<li>プロジェクトの下に作られるpublicをGitHub Pagesで公開</li>\n<li>独自ドメインの設定</li>\n</ul>\n<p>の3つです。</p>\n<h2 id=\"github-pagesで公開\"><a href=\"#github-pages%E3%81%A7%E5%85%AC%E9%96%8B\" aria-label=\"github pagesで公開 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GitHub Pagesで公開</h2>\n<p>まずは、Hugoのプロジェクトルートをgitで管理します。<br>\nGitHub Pagesで公開するために、GitHubのリポジトリの設定からPagesで公開するための設定を行います。このとき、そのまま公開すると、Hugoをビルドして生成されるファイルはプロジェクトルート直下のpublic以下に生成されるので、</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> https://<span class=\"token punctuation\">{</span>ユーザー名<span class=\"token punctuation\">}</span>.github.io/<span class=\"token punctuation\">{</span>リポジトリ名<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">{</span>public<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>というように、URLにpublicが付いてしまいます。これは嫌なので、git subtreeを使います。<br>\ngh-pagesという新しいブランチを作成し、public以下のファイルのみをpushしています。github pagesではgh-pagesを公開するよう設定します。  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> subtree push --prefix public/ <span class=\"token builtin class-name\">.</span> gh-pages\n$ <span class=\"token function\">git</span> push origin gh-pages:gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>GitHubから独自ドメインの設定をすると、ブランチgh-pagesにCNAMEファイルが追加、commitされるのですが、この変更をローカルのmasterに取り込めないという問題が発生しました。このため、ローカルで記事を追加したときなど、non-fast-forwardでpush、pullもできなくなりました。そこで、しょうがなくmaster側にローカルからCNAMEファイルを追加しました。  </p>\n<p>それでもうまくいかないときは、エラー文のcommitのハッシュを使って無理やりpushしてとりあえず回避してます。</p>\n<p>例</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> $ <span class=\"token function\">git</span> subtree push --prefix public/ <span class=\"token builtin class-name\">.</span> gh-pages\n <span class=\"token function\">git</span> push using:  <span class=\"token builtin class-name\">.</span> gh-pages\n To <span class=\"token builtin class-name\">.</span>     <span class=\"token number\">59</span> <span class=\"token punctuation\">(</span><span class=\"token number\">58</span><span class=\"token punctuation\">)</span>\n  <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span>rejected<span class=\"token punctuation\">]</span>        95625bda7b4247ff0d05b2e76c8db1cbb7e87dad -<span class=\"token operator\">></span> gh-pages <span class=\"token punctuation\">(</span>non-fast-forward<span class=\"token punctuation\">)</span>\n error: failed to push some refs to <span class=\"token string\">'.'</span>\n hint: Updates were rejected because a pushed branch tip is behind its remote\n hint: counterpart. Check out this branch and integrate the remote changes\n hint: <span class=\"token punctuation\">(</span>e.g. <span class=\"token string\">'git pull ...'</span><span class=\"token punctuation\">)</span> before pushing again.\n hint: See the <span class=\"token string\">'Note about fast-forwards'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'git push --help'</span> <span class=\"token keyword\">for</span> details.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> $ <span class=\"token function\">git</span> push origin 95625bda7b4247ff0d05b2e76c8db1cbb7e87dad:gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"独自ドメインの設定\"><a href=\"#%E7%8B%AC%E8%87%AA%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"独自ドメインの設定 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>独自ドメインの設定</h2>\n<p>今回は、お名前.comでドメインを取得しました。お名前.comでDNSの設定をします。<br>\nGitHub Pagesのドメインは</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"> https://<span class=\"token punctuation\">{</span>ユーザー名<span class=\"token punctuation\">}</span>.github.io/<span class=\"token punctuation\">{</span>リポジトリ名<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>なので、取得したドメインでGitHub PagesのドメインがひけるようにCNAMEの設定を行います。  </p>\n<p>GitHub側では、リポジトリの設定からCustom domainを取得したドメインで設定します。Custom domainを設定すると、Enforce HTTPSにチェックを入れることができるので、設定するとhttpsで通信が行えるようになります。  </p>","frontmatter":{"title":"HugoをGitHub Pagesで公開する","date":"2018-10-15","tags":["hugo"]},"tableOfContents":"<ul>\n<li><a href=\"/hugo/hugo-git-pages/#github-pages%E3%81%A7%E5%85%AC%E9%96%8B\">GitHub Pagesで公開</a></li>\n<li><a href=\"/hugo/hugo-git-pages/#%E7%8B%AC%E8%87%AA%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E3%81%AE%E8%A8%AD%E5%AE%9A\">独自ドメインの設定</a></li>\n</ul>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/hugo/hugo-git-pages/"}}}