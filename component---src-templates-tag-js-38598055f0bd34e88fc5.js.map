{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["pageQuery","Tag","pageContext","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","tag","totalCount","tagHeader","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","GetTechTags","getTechTags"],"mappings":"0FAAA,0IAsFaA,EAAS,aAwCPC,UAlHH,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACjBC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAC/BG,EAAOR,EAAPQ,IACAC,EAAcR,EAAKE,kBAAnBM,WACDC,EAAeD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEED,EAFF,IAQf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MAAM,OAAOC,SAAU,CAAC,SAAD,8DAC5B,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iCACX,2BAAG,wBAAIA,UAAU,WAAWH,IAC3BR,EAAMY,KAAI,SAACC,GACR,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACI,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,2BAC9B,kBAAC,OAAD,CACIQ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,WAAWE,EAAKE,KAAKC,YAAYP,QAEnD,2BAAOE,UAAU,qBAAqBE,EAAKE,KAAKC,YAAYM,MAE5D,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,yBAAKZ,UAAU,WAzB/B,SAACG,GACjB,OAAOU,YAAYV,EAAMX,GAyBYsB,CAAYX,SAOjC,yBAAKH,UAAU,4BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD","file":"component---src-templates-tag-js-38598055f0bd34e88fc5.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link, graphql} from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"../pages/index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\nimport GetTechTags from \"../components/tags/GetTechTag\";\n\nconst Tag = ({pageContext, data}) => {\n    const posts = data.allMarkdownRemark.edges;\n    const labels = data.site.siteMetadata.labels;\n    const {tag} = pageContext;\n    const {totalCount} = data.allMarkdownRemark;\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`;\n\n    const getTechTags = (tags) => {\n        return GetTechTags(tags, labels);\n    };\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `node.js`, `graphql`]}/>\n            <div className=\"container-fluid\">\n                <div className=\"post-list-main\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-xl-9 col-lg-9 mb-5\">\n                            <i><h2 className=\"heading\">{tagHeader}</h2></i>\n                            {posts.map((post) => {\n                                const tags = post.node.frontmatter.tags;\n                                return (\n                                    <div key={post.node.id} className=\"container card p-3 mb-5\">\n                                        <Link\n                                            to={post.node.fields.slug}\n                                            className=\"text-dark\"\n                                        >\n                                            <h2 className=\"heading\">{post.node.frontmatter.title}</h2>\n                                        </Link>\n                                        <small className=\"d-block text-info\">{post.node.frontmatter.date}\n                                        </small>\n                                        <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                                        <div className=\"d-block\">\n                                            {getTechTags(tags)}\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                        <div className=\"col-12 col-xl-3 col-lg-3\">\n                            <div className=\"px-4 py-2\">\n                                <Sidebar/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n};\n\nTag.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n};\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n        siteMetadata {\n            title \n            author\n            labels {\n                tag\n                tech \n                name \n                size \n                color\n            } \n        }\n    } \n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, published: { eq: true } } }\n    ) {\n      totalCount\n      edges {\n         node {\n            excerpt(pruneLength: 200)\n            html\n            id\n            frontmatter {\n                title\n                date(formatString: \"YYYY-MM-DD\")\n                tags\n            }\n             fields {\n                slug\n            }\n        }\n      }\n    }\n  }\n`;\n\nexport default Tag"],"sourceRoot":""}